@charset "UTF-8";
/*********************************************
    Foundation
**********************************************/
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

body.is-reveal-open {
  overflow: hidden; }

.foundation-mq {
  font-family: "small=0em&medium=40em&large=64em&xlarge=75em&xxlarge=90em"; }

html,
body {
  font-size: 100%;
  box-sizing: border-box; }

*,
*:before,
*:after {
  box-sizing: inherit; }

body {
  padding: 0;
  margin: 0;
  font-family: "Josefin Sans", Helvetica, Roboto, Arial, sans-serif;
  font-weight: normal;
  line-height: 1.5;
  color: #0a0a0a;
  background: #fefefe;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

img {
  max-width: 100%;
  height: auto;
  -ms-interpolation-mode: bicubic;
  display: inline-block;
  vertical-align: middle; }

textarea {
  height: auto;
  min-height: 50px;
  border-radius: 0; }

select {
  width: 100%;
  border-radius: 0; }

#map_canvas img,
#map_canvas embed,
#map_canvas object,
.map_canvas img,
.map_canvas embed,
.map_canvas object,
.mqa-display img,
.mqa-display embed,
.mqa-display object {
  max-width: none !important; }

button {
  -webkit-appearance: none;
  -moz-appearance: none;
  background: transparent;
  padding: 0;
  border: 0;
  border-radius: 0;
  line-height: 1; }

.row {
  max-width: 75rem;
  margin-left: auto;
  margin-right: auto; }
  .row::before, .row::after {
    content: ' ';
    display: table; }
  .row::after {
    clear: both; }
  .row.collapse > .column, .row.collapse > .columns {
    padding-left: 0;
    padding-right: 0; }
  .row .row {
    margin-left: -0.9375rem;
    margin-right: -0.9375rem; }
    .row .row.collapse {
      margin-left: 0;
      margin-right: 0; }
  .row.small-collapse > .column, .row.small-collapse > .columns {
    padding-left: 0;
    padding-right: 0; }
  .row.small-uncollapse > .column, .row.small-uncollapse > .columns {
    padding-left: 30px;
    padding-right: 30px; }
  @media screen and (min-width: 40em) {
    .row.medium-collapse > .column, .row.medium-collapse > .columns {
      padding-left: 0;
      padding-right: 0; }
    .row.medium-uncollapse > .column, .row.medium-uncollapse > .columns {
      padding-left: 30px;
      padding-right: 30px; } }
  @media screen and (min-width: 64em) {
    .row.large-collapse > .column, .row.large-collapse > .columns {
      padding-left: 0;
      padding-right: 0; }
    .row.large-uncollapse > .column, .row.large-uncollapse > .columns {
      padding-left: 30px;
      padding-right: 30px; } }
  .row.expanded {
    max-width: none; }

.column, .columns {
  width: 100%;
  float: left;
  padding-left: 0.9375rem;
  padding-right: 0.9375rem; }
  .column:last-child:not(:first-child), .columns:last-child:not(:first-child) {
    float: right; }
  .column.end:last-child:last-child, .end.columns:last-child:last-child {
    float: left; }

.column.row.row, .row.row.columns {
  float: none; }

.small-1 {
  width: 8.3333333333%; }

.small-push-1 {
  position: relative;
  left: 8.3333333333%; }

.small-pull-1 {
  position: relative;
  left: -8.3333333333%; }

.small-offset-0 {
  margin-left: 0%; }

.small-2 {
  width: 16.6666666667%; }

.small-push-2 {
  position: relative;
  left: 16.6666666667%; }

.small-pull-2 {
  position: relative;
  left: -16.6666666667%; }

.small-offset-1 {
  margin-left: 8.3333333333%; }

.small-3 {
  width: 25%; }

.small-push-3 {
  position: relative;
  left: 25%; }

.small-pull-3 {
  position: relative;
  left: -25%; }

.small-offset-2 {
  margin-left: 16.6666666667%; }

.small-4 {
  width: 33.3333333333%; }

.small-push-4 {
  position: relative;
  left: 33.3333333333%; }

.small-pull-4 {
  position: relative;
  left: -33.3333333333%; }

.small-offset-3 {
  margin-left: 25%; }

.small-5 {
  width: 41.6666666667%; }

.small-push-5 {
  position: relative;
  left: 41.6666666667%; }

.small-pull-5 {
  position: relative;
  left: -41.6666666667%; }

.small-offset-4 {
  margin-left: 33.3333333333%; }

.small-6 {
  width: 50%; }

.small-push-6 {
  position: relative;
  left: 50%; }

.small-pull-6 {
  position: relative;
  left: -50%; }

.small-offset-5 {
  margin-left: 41.6666666667%; }

.small-7 {
  width: 58.3333333333%; }

.small-push-7 {
  position: relative;
  left: 58.3333333333%; }

.small-pull-7 {
  position: relative;
  left: -58.3333333333%; }

.small-offset-6 {
  margin-left: 50%; }

.small-8 {
  width: 66.6666666667%; }

.small-push-8 {
  position: relative;
  left: 66.6666666667%; }

.small-pull-8 {
  position: relative;
  left: -66.6666666667%; }

.small-offset-7 {
  margin-left: 58.3333333333%; }

.small-9 {
  width: 75%; }

.small-push-9 {
  position: relative;
  left: 75%; }

.small-pull-9 {
  position: relative;
  left: -75%; }

.small-offset-8 {
  margin-left: 66.6666666667%; }

.small-10 {
  width: 83.3333333333%; }

.small-push-10 {
  position: relative;
  left: 83.3333333333%; }

.small-pull-10 {
  position: relative;
  left: -83.3333333333%; }

.small-offset-9 {
  margin-left: 75%; }

.small-11 {
  width: 91.6666666667%; }

.small-push-11 {
  position: relative;
  left: 91.6666666667%; }

.small-pull-11 {
  position: relative;
  left: -91.6666666667%; }

.small-offset-10 {
  margin-left: 83.3333333333%; }

.small-12 {
  width: 100%; }

.small-offset-11 {
  margin-left: 91.6666666667%; }

.small-up-1 > .column, .small-up-1 > .columns {
  width: 100%;
  float: left; }
  .small-up-1 > .column:nth-of-type(1n), .small-up-1 > .columns:nth-of-type(1n) {
    clear: none; }
  .small-up-1 > .column:nth-of-type(1n+1), .small-up-1 > .columns:nth-of-type(1n+1) {
    clear: both; }
  .small-up-1 > .column:last-child, .small-up-1 > .columns:last-child {
    float: left; }

.small-up-2 > .column, .small-up-2 > .columns {
  width: 50%;
  float: left; }
  .small-up-2 > .column:nth-of-type(1n), .small-up-2 > .columns:nth-of-type(1n) {
    clear: none; }
  .small-up-2 > .column:nth-of-type(2n+1), .small-up-2 > .columns:nth-of-type(2n+1) {
    clear: both; }
  .small-up-2 > .column:last-child, .small-up-2 > .columns:last-child {
    float: left; }

.small-up-3 > .column, .small-up-3 > .columns {
  width: 33.3333333333%;
  float: left; }
  .small-up-3 > .column:nth-of-type(1n), .small-up-3 > .columns:nth-of-type(1n) {
    clear: none; }
  .small-up-3 > .column:nth-of-type(3n+1), .small-up-3 > .columns:nth-of-type(3n+1) {
    clear: both; }
  .small-up-3 > .column:last-child, .small-up-3 > .columns:last-child {
    float: left; }

.small-up-4 > .column, .small-up-4 > .columns {
  width: 25%;
  float: left; }
  .small-up-4 > .column:nth-of-type(1n), .small-up-4 > .columns:nth-of-type(1n) {
    clear: none; }
  .small-up-4 > .column:nth-of-type(4n+1), .small-up-4 > .columns:nth-of-type(4n+1) {
    clear: both; }
  .small-up-4 > .column:last-child, .small-up-4 > .columns:last-child {
    float: left; }

.small-up-5 > .column, .small-up-5 > .columns {
  width: 20%;
  float: left; }
  .small-up-5 > .column:nth-of-type(1n), .small-up-5 > .columns:nth-of-type(1n) {
    clear: none; }
  .small-up-5 > .column:nth-of-type(5n+1), .small-up-5 > .columns:nth-of-type(5n+1) {
    clear: both; }
  .small-up-5 > .column:last-child, .small-up-5 > .columns:last-child {
    float: left; }

.small-up-6 > .column, .small-up-6 > .columns {
  width: 16.6666666667%;
  float: left; }
  .small-up-6 > .column:nth-of-type(1n), .small-up-6 > .columns:nth-of-type(1n) {
    clear: none; }
  .small-up-6 > .column:nth-of-type(6n+1), .small-up-6 > .columns:nth-of-type(6n+1) {
    clear: both; }
  .small-up-6 > .column:last-child, .small-up-6 > .columns:last-child {
    float: left; }

.small-up-7 > .column, .small-up-7 > .columns {
  width: 14.2857142857%;
  float: left; }
  .small-up-7 > .column:nth-of-type(1n), .small-up-7 > .columns:nth-of-type(1n) {
    clear: none; }
  .small-up-7 > .column:nth-of-type(7n+1), .small-up-7 > .columns:nth-of-type(7n+1) {
    clear: both; }
  .small-up-7 > .column:last-child, .small-up-7 > .columns:last-child {
    float: left; }

.small-up-8 > .column, .small-up-8 > .columns {
  width: 12.5%;
  float: left; }
  .small-up-8 > .column:nth-of-type(1n), .small-up-8 > .columns:nth-of-type(1n) {
    clear: none; }
  .small-up-8 > .column:nth-of-type(8n+1), .small-up-8 > .columns:nth-of-type(8n+1) {
    clear: both; }
  .small-up-8 > .column:last-child, .small-up-8 > .columns:last-child {
    float: left; }

.column.small-centered, .small-centered.columns {
  float: none;
  margin-left: auto;
  margin-right: auto; }

.small-uncenter,
.small-push-0,
.small-pull-0 {
  position: static;
  margin-left: 0;
  margin-right: 0; }

@media screen and (min-width: 40em) {
  .medium-1 {
    width: 8.3333333333%; }
  .medium-push-1 {
    position: relative;
    left: 8.3333333333%; }
  .medium-pull-1 {
    position: relative;
    left: -8.3333333333%; }
  .medium-offset-0 {
    margin-left: 0%; }
  .medium-2 {
    width: 16.6666666667%; }
  .medium-push-2 {
    position: relative;
    left: 16.6666666667%; }
  .medium-pull-2 {
    position: relative;
    left: -16.6666666667%; }
  .medium-offset-1 {
    margin-left: 8.3333333333%; }
  .medium-3 {
    width: 25%; }
  .medium-push-3 {
    position: relative;
    left: 25%; }
  .medium-pull-3 {
    position: relative;
    left: -25%; }
  .medium-offset-2 {
    margin-left: 16.6666666667%; }
  .medium-4 {
    width: 33.3333333333%; }
  .medium-push-4 {
    position: relative;
    left: 33.3333333333%; }
  .medium-pull-4 {
    position: relative;
    left: -33.3333333333%; }
  .medium-offset-3 {
    margin-left: 25%; }
  .medium-5 {
    width: 41.6666666667%; }
  .medium-push-5 {
    position: relative;
    left: 41.6666666667%; }
  .medium-pull-5 {
    position: relative;
    left: -41.6666666667%; }
  .medium-offset-4 {
    margin-left: 33.3333333333%; }
  .medium-6 {
    width: 50%; }
  .medium-push-6 {
    position: relative;
    left: 50%; }
  .medium-pull-6 {
    position: relative;
    left: -50%; }
  .medium-offset-5 {
    margin-left: 41.6666666667%; }
  .medium-7 {
    width: 58.3333333333%; }
  .medium-push-7 {
    position: relative;
    left: 58.3333333333%; }
  .medium-pull-7 {
    position: relative;
    left: -58.3333333333%; }
  .medium-offset-6 {
    margin-left: 50%; }
  .medium-8 {
    width: 66.6666666667%; }
  .medium-push-8 {
    position: relative;
    left: 66.6666666667%; }
  .medium-pull-8 {
    position: relative;
    left: -66.6666666667%; }
  .medium-offset-7 {
    margin-left: 58.3333333333%; }
  .medium-9 {
    width: 75%; }
  .medium-push-9 {
    position: relative;
    left: 75%; }
  .medium-pull-9 {
    position: relative;
    left: -75%; }
  .medium-offset-8 {
    margin-left: 66.6666666667%; }
  .medium-10 {
    width: 83.3333333333%; }
  .medium-push-10 {
    position: relative;
    left: 83.3333333333%; }
  .medium-pull-10 {
    position: relative;
    left: -83.3333333333%; }
  .medium-offset-9 {
    margin-left: 75%; }
  .medium-11 {
    width: 91.6666666667%; }
  .medium-push-11 {
    position: relative;
    left: 91.6666666667%; }
  .medium-pull-11 {
    position: relative;
    left: -91.6666666667%; }
  .medium-offset-10 {
    margin-left: 83.3333333333%; }
  .medium-12 {
    width: 100%; }
  .medium-offset-11 {
    margin-left: 91.6666666667%; }
  .medium-up-1 > .column, .medium-up-1 > .columns {
    width: 100%;
    float: left; }
    .medium-up-1 > .column:nth-of-type(1n), .medium-up-1 > .columns:nth-of-type(1n) {
      clear: none; }
    .medium-up-1 > .column:nth-of-type(1n+1), .medium-up-1 > .columns:nth-of-type(1n+1) {
      clear: both; }
    .medium-up-1 > .column:last-child, .medium-up-1 > .columns:last-child {
      float: left; }
  .medium-up-2 > .column, .medium-up-2 > .columns {
    width: 50%;
    float: left; }
    .medium-up-2 > .column:nth-of-type(1n), .medium-up-2 > .columns:nth-of-type(1n) {
      clear: none; }
    .medium-up-2 > .column:nth-of-type(2n+1), .medium-up-2 > .columns:nth-of-type(2n+1) {
      clear: both; }
    .medium-up-2 > .column:last-child, .medium-up-2 > .columns:last-child {
      float: left; }
  .medium-up-3 > .column, .medium-up-3 > .columns {
    width: 33.3333333333%;
    float: left; }
    .medium-up-3 > .column:nth-of-type(1n), .medium-up-3 > .columns:nth-of-type(1n) {
      clear: none; }
    .medium-up-3 > .column:nth-of-type(3n+1), .medium-up-3 > .columns:nth-of-type(3n+1) {
      clear: both; }
    .medium-up-3 > .column:last-child, .medium-up-3 > .columns:last-child {
      float: left; }
  .medium-up-4 > .column, .medium-up-4 > .columns {
    width: 25%;
    float: left; }
    .medium-up-4 > .column:nth-of-type(1n), .medium-up-4 > .columns:nth-of-type(1n) {
      clear: none; }
    .medium-up-4 > .column:nth-of-type(4n+1), .medium-up-4 > .columns:nth-of-type(4n+1) {
      clear: both; }
    .medium-up-4 > .column:last-child, .medium-up-4 > .columns:last-child {
      float: left; }
  .medium-up-5 > .column, .medium-up-5 > .columns {
    width: 20%;
    float: left; }
    .medium-up-5 > .column:nth-of-type(1n), .medium-up-5 > .columns:nth-of-type(1n) {
      clear: none; }
    .medium-up-5 > .column:nth-of-type(5n+1), .medium-up-5 > .columns:nth-of-type(5n+1) {
      clear: both; }
    .medium-up-5 > .column:last-child, .medium-up-5 > .columns:last-child {
      float: left; }
  .medium-up-6 > .column, .medium-up-6 > .columns {
    width: 16.6666666667%;
    float: left; }
    .medium-up-6 > .column:nth-of-type(1n), .medium-up-6 > .columns:nth-of-type(1n) {
      clear: none; }
    .medium-up-6 > .column:nth-of-type(6n+1), .medium-up-6 > .columns:nth-of-type(6n+1) {
      clear: both; }
    .medium-up-6 > .column:last-child, .medium-up-6 > .columns:last-child {
      float: left; }
  .medium-up-7 > .column, .medium-up-7 > .columns {
    width: 14.2857142857%;
    float: left; }
    .medium-up-7 > .column:nth-of-type(1n), .medium-up-7 > .columns:nth-of-type(1n) {
      clear: none; }
    .medium-up-7 > .column:nth-of-type(7n+1), .medium-up-7 > .columns:nth-of-type(7n+1) {
      clear: both; }
    .medium-up-7 > .column:last-child, .medium-up-7 > .columns:last-child {
      float: left; }
  .medium-up-8 > .column, .medium-up-8 > .columns {
    width: 12.5%;
    float: left; }
    .medium-up-8 > .column:nth-of-type(1n), .medium-up-8 > .columns:nth-of-type(1n) {
      clear: none; }
    .medium-up-8 > .column:nth-of-type(8n+1), .medium-up-8 > .columns:nth-of-type(8n+1) {
      clear: both; }
    .medium-up-8 > .column:last-child, .medium-up-8 > .columns:last-child {
      float: left; }
  .column.medium-centered, .medium-centered.columns {
    float: none;
    margin-left: auto;
    margin-right: auto; }
  .medium-uncenter,
  .medium-push-0,
  .medium-pull-0 {
    position: static;
    margin-left: 0;
    margin-right: 0; } }

@media screen and (min-width: 64em) {
  .large-1 {
    width: 8.3333333333%; }
  .large-push-1 {
    position: relative;
    left: 8.3333333333%; }
  .large-pull-1 {
    position: relative;
    left: -8.3333333333%; }
  .large-offset-0 {
    margin-left: 0%; }
  .large-2 {
    width: 16.6666666667%; }
  .large-push-2 {
    position: relative;
    left: 16.6666666667%; }
  .large-pull-2 {
    position: relative;
    left: -16.6666666667%; }
  .large-offset-1 {
    margin-left: 8.3333333333%; }
  .large-3 {
    width: 25%; }
  .large-push-3 {
    position: relative;
    left: 25%; }
  .large-pull-3 {
    position: relative;
    left: -25%; }
  .large-offset-2 {
    margin-left: 16.6666666667%; }
  .large-4 {
    width: 33.3333333333%; }
  .large-push-4 {
    position: relative;
    left: 33.3333333333%; }
  .large-pull-4 {
    position: relative;
    left: -33.3333333333%; }
  .large-offset-3 {
    margin-left: 25%; }
  .large-5 {
    width: 41.6666666667%; }
  .large-push-5 {
    position: relative;
    left: 41.6666666667%; }
  .large-pull-5 {
    position: relative;
    left: -41.6666666667%; }
  .large-offset-4 {
    margin-left: 33.3333333333%; }
  .large-6 {
    width: 50%; }
  .large-push-6 {
    position: relative;
    left: 50%; }
  .large-pull-6 {
    position: relative;
    left: -50%; }
  .large-offset-5 {
    margin-left: 41.6666666667%; }
  .large-7 {
    width: 58.3333333333%; }
  .large-push-7 {
    position: relative;
    left: 58.3333333333%; }
  .large-pull-7 {
    position: relative;
    left: -58.3333333333%; }
  .large-offset-6 {
    margin-left: 50%; }
  .large-8 {
    width: 66.6666666667%; }
  .large-push-8 {
    position: relative;
    left: 66.6666666667%; }
  .large-pull-8 {
    position: relative;
    left: -66.6666666667%; }
  .large-offset-7 {
    margin-left: 58.3333333333%; }
  .large-9 {
    width: 75%; }
  .large-push-9 {
    position: relative;
    left: 75%; }
  .large-pull-9 {
    position: relative;
    left: -75%; }
  .large-offset-8 {
    margin-left: 66.6666666667%; }
  .large-10 {
    width: 83.3333333333%; }
  .large-push-10 {
    position: relative;
    left: 83.3333333333%; }
  .large-pull-10 {
    position: relative;
    left: -83.3333333333%; }
  .large-offset-9 {
    margin-left: 75%; }
  .large-11 {
    width: 91.6666666667%; }
  .large-push-11 {
    position: relative;
    left: 91.6666666667%; }
  .large-pull-11 {
    position: relative;
    left: -91.6666666667%; }
  .large-offset-10 {
    margin-left: 83.3333333333%; }
  .large-12 {
    width: 100%; }
  .large-offset-11 {
    margin-left: 91.6666666667%; }
  .large-up-1 > .column, .large-up-1 > .columns {
    width: 100%;
    float: left; }
    .large-up-1 > .column:nth-of-type(1n), .large-up-1 > .columns:nth-of-type(1n) {
      clear: none; }
    .large-up-1 > .column:nth-of-type(1n+1), .large-up-1 > .columns:nth-of-type(1n+1) {
      clear: both; }
    .large-up-1 > .column:last-child, .large-up-1 > .columns:last-child {
      float: left; }
  .large-up-2 > .column, .large-up-2 > .columns {
    width: 50%;
    float: left; }
    .large-up-2 > .column:nth-of-type(1n), .large-up-2 > .columns:nth-of-type(1n) {
      clear: none; }
    .large-up-2 > .column:nth-of-type(2n+1), .large-up-2 > .columns:nth-of-type(2n+1) {
      clear: both; }
    .large-up-2 > .column:last-child, .large-up-2 > .columns:last-child {
      float: left; }
  .large-up-3 > .column, .large-up-3 > .columns {
    width: 33.3333333333%;
    float: left; }
    .large-up-3 > .column:nth-of-type(1n), .large-up-3 > .columns:nth-of-type(1n) {
      clear: none; }
    .large-up-3 > .column:nth-of-type(3n+1), .large-up-3 > .columns:nth-of-type(3n+1) {
      clear: both; }
    .large-up-3 > .column:last-child, .large-up-3 > .columns:last-child {
      float: left; }
  .large-up-4 > .column, .large-up-4 > .columns {
    width: 25%;
    float: left; }
    .large-up-4 > .column:nth-of-type(1n), .large-up-4 > .columns:nth-of-type(1n) {
      clear: none; }
    .large-up-4 > .column:nth-of-type(4n+1), .large-up-4 > .columns:nth-of-type(4n+1) {
      clear: both; }
    .large-up-4 > .column:last-child, .large-up-4 > .columns:last-child {
      float: left; }
  .large-up-5 > .column, .large-up-5 > .columns {
    width: 20%;
    float: left; }
    .large-up-5 > .column:nth-of-type(1n), .large-up-5 > .columns:nth-of-type(1n) {
      clear: none; }
    .large-up-5 > .column:nth-of-type(5n+1), .large-up-5 > .columns:nth-of-type(5n+1) {
      clear: both; }
    .large-up-5 > .column:last-child, .large-up-5 > .columns:last-child {
      float: left; }
  .large-up-6 > .column, .large-up-6 > .columns {
    width: 16.6666666667%;
    float: left; }
    .large-up-6 > .column:nth-of-type(1n), .large-up-6 > .columns:nth-of-type(1n) {
      clear: none; }
    .large-up-6 > .column:nth-of-type(6n+1), .large-up-6 > .columns:nth-of-type(6n+1) {
      clear: both; }
    .large-up-6 > .column:last-child, .large-up-6 > .columns:last-child {
      float: left; }
  .large-up-7 > .column, .large-up-7 > .columns {
    width: 14.2857142857%;
    float: left; }
    .large-up-7 > .column:nth-of-type(1n), .large-up-7 > .columns:nth-of-type(1n) {
      clear: none; }
    .large-up-7 > .column:nth-of-type(7n+1), .large-up-7 > .columns:nth-of-type(7n+1) {
      clear: both; }
    .large-up-7 > .column:last-child, .large-up-7 > .columns:last-child {
      float: left; }
  .large-up-8 > .column, .large-up-8 > .columns {
    width: 12.5%;
    float: left; }
    .large-up-8 > .column:nth-of-type(1n), .large-up-8 > .columns:nth-of-type(1n) {
      clear: none; }
    .large-up-8 > .column:nth-of-type(8n+1), .large-up-8 > .columns:nth-of-type(8n+1) {
      clear: both; }
    .large-up-8 > .column:last-child, .large-up-8 > .columns:last-child {
      float: left; }
  .column.large-centered, .large-centered.columns {
    float: none;
    margin-left: auto;
    margin-right: auto; }
  .large-uncenter,
  .large-push-0,
  .large-pull-0 {
    position: static;
    margin-left: 0;
    margin-right: 0; } }

div,
dl,
dt,
dd,
ul,
ol,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
form,
p,
blockquote,
th,
td {
  margin: 0;
  padding: 0; }

p {
  font-size: inherit;
  line-height: 1.6;
  margin-bottom: 1rem;
  text-rendering: optimizeLegibility; }

em,
i {
  font-style: italic;
  line-height: inherit; }

strong,
b {
  font-weight: bold;
  line-height: inherit; }

small {
  font-size: 80%;
  line-height: inherit; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Josefin Sans", Helvetica, Roboto, Arial, sans-serif;
  font-weight: normal;
  font-style: normal;
  color: inherit;
  text-rendering: optimizeLegibility;
  margin-top: 0;
  margin-bottom: 0.5rem;
  line-height: 1.4; }
  h1 small,
  h2 small,
  h3 small,
  h4 small,
  h5 small,
  h6 small {
    color: #cacaca;
    line-height: 0; }

h1 {
  font-size: 1.5rem; }

h2 {
  font-size: 1.25rem; }

h3 {
  font-size: 1.1875rem; }

h4 {
  font-size: 1.125rem; }

h5 {
  font-size: 1.0625rem; }

h6 {
  font-size: 1rem; }

@media screen and (min-width: 40em) {
  h1 {
    font-size: 3rem; }
  h2 {
    font-size: 2.5rem; }
  h3 {
    font-size: 1.9375rem; }
  h4 {
    font-size: 1.5625rem; }
  h5 {
    font-size: 1.25rem; }
  h6 {
    font-size: 1rem; } }

a {
  color: #ad8c59;
  text-decoration: none;
  line-height: inherit;
  cursor: pointer; }
  a:hover, a:focus {
    color: #97794b; }
  a img {
    border: 0; }

hr {
  max-width: 75rem;
  height: 0;
  border-right: 0;
  border-top: 0;
  border-bottom: 1px solid #cacaca;
  border-left: 0;
  margin: 1.25rem auto;
  clear: both; }

ul,
ol,
dl {
  line-height: 1.6;
  margin-bottom: 1rem;
  list-style-position: outside; }

li {
  font-size: inherit; }

ul {
  list-style-type: disc;
  margin-left: 1.25rem; }

ol {
  margin-left: 1.25rem; }

ul ul, ol ul, ul ol, ol ol {
  margin-left: 1.25rem;
  margin-bottom: 0;
  list-style-type: inherit; }

dl {
  margin-bottom: 1rem; }
  dl dt {
    margin-bottom: 0.3rem;
    font-weight: bold; }

blockquote {
  margin: 0 0 1rem;
  padding: 0.5625rem 1.25rem 0 1.1875rem;
  border-left: 1px solid #cacaca; }
  blockquote, blockquote p {
    line-height: 1.6;
    color: #8a8a8a; }

cite {
  display: block;
  font-size: 0.8125rem;
  color: #8a8a8a; }
  cite:before {
    content: '\2014 \0020'; }

abbr {
  color: #0a0a0a;
  cursor: help;
  border-bottom: 1px dotted #0a0a0a; }

code {
  font-family: "Josefin Sans", "Liberation Mono", Courier, monospace;
  font-weight: normal;
  color: #0a0a0a;
  background-color: #e6e6e6;
  border: 1px solid #cacaca;
  padding: 0.125rem 0.3125rem 0.0625rem; }

kbd {
  padding: 0.125rem 0.25rem 0;
  margin: 0;
  background-color: #e6e6e6;
  color: #0a0a0a;
  font-family: "Josefin Sans", "Liberation Mono", Courier, monospace; }

.subheader {
  margin-top: 0.2rem;
  margin-bottom: 0.5rem;
  font-weight: normal;
  line-height: 1.4;
  color: #8a8a8a; }

.lead {
  font-size: 125%;
  line-height: 1.6; }

.stat {
  font-size: 2.5rem;
  line-height: 1; }
  p + .stat {
    margin-top: -1rem; }

.no-bullet {
  margin-left: 0;
  list-style: none; }

.text-left {
  text-align: left; }

.text-right {
  text-align: right; }

.text-center {
  text-align: center; }

.text-justify {
  text-align: justify; }

@media screen and (min-width: 40em) {
  .medium-text-left {
    text-align: left; }
  .medium-text-right {
    text-align: right; }
  .medium-text-center {
    text-align: center; }
  .medium-text-justify {
    text-align: justify; } }

@media screen and (min-width: 64em) {
  .large-text-left {
    text-align: left; }
  .large-text-right {
    text-align: right; }
  .large-text-center {
    text-align: center; }
  .large-text-justify {
    text-align: justify; } }

.show-for-print {
  display: none !important; }

@media print {
  * {
    background: transparent !important;
    color: black !important;
    box-shadow: none !important;
    text-shadow: none !important; }
  .show-for-print {
    display: block !important; }
  .hide-for-print {
    display: none !important; }
  table.show-for-print {
    display: table !important; }
  thead.show-for-print {
    display: table-header-group !important; }
  tbody.show-for-print {
    display: table-row-group !important; }
  tr.show-for-print {
    display: table-row !important; }
  td.show-for-print {
    display: table-cell !important; }
  th.show-for-print {
    display: table-cell !important; }
  a,
  a:visited {
    text-decoration: underline; }
  a[href]:after {
    content: " (" attr(href) ")"; }
  .ir a:after,
  a[href^='javascript:']:after,
  a[href^='#']:after {
    content: ''; }
  abbr[title]:after {
    content: " (" attr(title) ")"; }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }
  thead {
    display: table-header-group; }
  tr,
  img {
    page-break-inside: avoid; }
  img {
    max-width: 100% !important; }
  @page {
    margin: 0.5cm; }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }
  h2,
  h3 {
    page-break-after: avoid; } }

.hide {
  display: none !important; }

.invisible {
  visibility: hidden; }

@media screen and (min-width: 0em) and (max-width: 39.9375em) {
  .hide-for-small-only {
    display: none !important; } }

@media screen and (max-width: 0em), screen and (min-width: 40em) {
  .show-for-small-only {
    display: none !important; } }

@media screen and (min-width: 40em) {
  .hide-for-medium {
    display: none !important; } }

@media screen and (max-width: 39.9375em) {
  .show-for-medium {
    display: none !important; } }

@media screen and (min-width: 40em) and (max-width: 63.9375em) {
  .hide-for-medium-only {
    display: none !important; } }

@media screen and (max-width: 39.9375em), screen and (min-width: 64em) {
  .show-for-medium-only {
    display: none !important; } }

@media screen and (min-width: 64em) {
  .hide-for-large {
    display: none !important; } }

@media screen and (max-width: 63.9375em) {
  .show-for-large {
    display: none !important; } }

@media screen and (min-width: 64em) and (max-width: 74.9375em) {
  .hide-for-large-only {
    display: none !important; } }

@media screen and (max-width: 63.9375em), screen and (min-width: 75em) {
  .show-for-large-only {
    display: none !important; } }

.show-for-sr,
.show-on-focus {
  position: absolute !important;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0); }

.show-on-focus:active, .show-on-focus:focus {
  position: static !important;
  height: auto;
  width: auto;
  overflow: visible;
  clip: auto; }

.show-for-landscape,
.hide-for-portrait {
  display: block !important; }
  @media screen and (orientation: landscape) {
    .show-for-landscape,
    .hide-for-portrait {
      display: block !important; } }
  @media screen and (orientation: portrait) {
    .show-for-landscape,
    .hide-for-portrait {
      display: none !important; } }

.hide-for-landscape,
.show-for-portrait {
  display: none !important; }
  @media screen and (orientation: landscape) {
    .hide-for-landscape,
    .show-for-portrait {
      display: none !important; } }
  @media screen and (orientation: portrait) {
    .hide-for-landscape,
    .show-for-portrait {
      display: block !important; } }

.thumbnail {
  border: solid 4px #fefefe;
  box-shadow: 0 0 0 1px rgba(10, 10, 10, 0.2);
  display: inline-block;
  line-height: 0;
  max-width: 100%;
  transition: box-shadow 200ms ease-out;
  border-radius: 0;
  margin-bottom: 1rem; }
  .thumbnail:hover, .thumbnail:focus {
    box-shadow: 0 0 6px 1px rgba(33, 153, 232, 0.5); }

/*********************************************
    Slick slider
**********************************************/
/* Settings for slick_modifications.scss */
/* Slider */
.slick-slider {
  position: relative;
  display: block;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -ms-touch-action: none;
  touch-action: none;
  -webkit-tap-highlight-color: transparent; }

.slick-list {
  position: relative;
  display: block;
  overflow: hidden;
  margin: 0;
  padding: 0; }
  .slick-list:focus {
    outline: none; }
  .slick-loading .slick-list {
    background: #fff url("./") "ajax-loader.gif" center center no-repeat; }
  .slick-list.dragging {
    cursor: pointer;
    cursor: hand; }

.slick-slider .slick-list,
.slick-track,
.slick-slide,
.slick-slide img {
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  -o-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0); }

.slick-track {
  position: relative;
  display: block;
  top: 0;
  left: 0;
  zoom: 1; }
  .slick-track:before, .slick-track:after {
    display: table;
    content: ""; }
  .slick-track:after {
    clear: both; }
  .slick-loading .slick-track {
    visibility: hidden; }

.slick-slide {
  display: none;
  float: left;
  height: 100%;
  min-height: 1px; }
  .slick-slide img {
    display: block; }
  .slick-slide.slick-loading img {
    display: none; }
  .slick-slide.dragging img {
    pointer-events: none; }
  .slick-initialized .slick-slide {
    display: block; }
  .slick-loading .slick-slide {
    visibility: hidden; }
  .slick-vertical .slick-slide {
    display: block;
    height: auto;
    border: 1px solid transparent; }

/* Icons */
@font-face {
  font-family: "slick";
  font-weight: normal;
  font-style: normal;
  src: url("./fonts/") "slick.eot";
  src: url("./fonts/") "slick.eot?#iefix" format("embedded-opentype"), url("./fonts/") "slick.woff" format("woff"), url("./fonts/") "slick.ttf" format("truetype"), url("./fonts/") "slick.svg#slick" format("svg"); }

/* Arrows */
.slick-prev,
.slick-next {
  position: absolute;
  display: block;
  cursor: pointer;
  top: 50%;
  width: 20px;
  height: 20px;
  margin-top: -10px;
  padding: 0;
  border: none;
  outline: none;
  background: transparent;
  color: transparent;
  font-size: 0;
  line-height: 0; }
  .slick-prev:hover, .slick-prev:focus,
  .slick-next:hover,
  .slick-next:focus {
    outline: none;
    background: transparent;
    color: transparent; }
    .slick-prev:hover:before, .slick-prev:focus:before,
    .slick-next:hover:before,
    .slick-next:focus:before {
      opacity: 1; }
  .slick-prev.slick-disabled:before,
  .slick-next.slick-disabled:before {
    opacity: 0.25; }

.slick-prev:before, .slick-next:before {
  opacity: 0.75;
  color: #2199e8;
  font-family: "slick";
  font-size: 20px;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.slick-prev {
  left: -25px; }
  .slick-prev:before {
    content: "←"; }

.slick-next {
  right: -25px; }
  .slick-next:before {
    content: "→"; }

/* Dots */
.slick-slider {
  margin-bottom: 30px; }

.slick-dots {
  position: absolute;
  display: block;
  bottom: -45px;
  width: 100%;
  padding: 0;
  text-align: center;
  list-style: none; }
  .slick-dots li {
    position: relative;
    display: inline-block;
    cursor: pointer;
    width: 20px;
    height: 20px;
    margin: 0 5px;
    padding: 0; }
    .slick-dots li button {
      display: block;
      cursor: pointer;
      width: 20px;
      height: 20px;
      padding: 5px;
      border: 0;
      outline: none;
      background: transparent;
      color: transparent;
      font-size: 0;
      line-height: 0; }
      .slick-dots li button:hover, .slick-dots li button:focus {
        outline: none; }
        .slick-dots li button:hover:before, .slick-dots li button:focus:before {
          opacity: 1; }
      .slick-dots li button:before {
        position: absolute;
        content: "•";
        top: 0;
        left: 0;
        width: 20px;
        height: 20px;
        opacity: 0.25;
        text-align: center;
        color: #2199e8;
        font-family: "slick";
        font-size: 10px;
        line-height: 20px;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale; }
    .slick-dots li.slick-active button:before {
      opacity: 0.75;
      color: #2199e8; }

/*********************************************
    Slick slider modifications
**********************************************/
.slick-next {
  right: 10px; }

.slick-prev {
  left: 10px; }

.slick-next,
.slick-prev {
  width: 40px;
  height: 40px; }

.slick-next:before,
.slick-prev:before {
  font-size: 40px; }

.slick-dots {
  margin-left: 0; }

/*********************************************
    Extensions
**********************************************/
.news .news-list-view .article {
  width: 50%;
  float: left;
  text-align: left;
  padding: 20px; }
  .news .news-list-view .article h2 a {
    color: #fefefe; }
    .news .news-list-view .article h2 a:hover {
      color: #ad8c59; }
  .news .news-list-view .article p {
    padding-top: 10px;
    text-align: left;
    font-family: "Josefin Sans"; }

.news-img-wrap {
  display: none; }

.newsall {
  margin: 0 auto;
  width: 780px; }

.news1, .news2 {
  width: 350px;
  float: left;
  text-align: left;
  font-size: 120%;
  font-weight: 100;
  padding: 20px; }

.news2 {
  padding-bottom: 120px; }

.news1artikel {
  padding-top: 10px;
  text-align: left;
  font-family: "Josefin Sans"; }

.date {
  color: #ad8c59;
  letter-spacing: 0.1em; }

@media only screen and (max-width: 840px) {
  .newsall {
    /*float: left;
    width: 90%;
    margin-left: 5%;
    margin-right: 5%;*/
    width: 350px;
    max-width: 90%; }
  .news1, .news2 {
    width: 100%;
    padding-right: 0;
    padding-left: 0;
    text-align: center; }
  .news1artikel,
  .date {
    text-align: center; } }

/*********************************************
    Site styles
**********************************************/
/*********************************************
    Content elements
**********************************************/
iframe {
  max-width: 100%;
  border: none; }

/*********************************************
    Reset box sizing on certain elements
**********************************************/
.fancybox-wrap,
.fancybox-wrap *,
iframe * {
  box-sizing: initial; }

/*********************************************
    Skiplinks
**********************************************/
#skiplinks {
  position: absolute;
  z-index: 1000;
  top: -20000px;
  width: 100%;
  margin: auto;
  padding: 0;
  list-style-type: none; }
  #skiplinks a {
    position: absolute;
    display: block;
    width: 100%;
    text-align: center;
    color: #fff; }
    #skiplinks a span {
      display: inline-block;
      padding: 7px 10px;
      background: #2199e8; }
  #skiplinks a:focus,
  #skiplinks a:active,
  #skiplinks a:hover {
    top: 20000px;
    outline: 0 none; }

/*********************************************
    Remove list style from lists
    of fields (form extension)
**********************************************/
form > ol,
fieldset > ol,
form ol li ol {
  list-style-type: none;
  margin-top: auto;
  margin-right: auto;
  margin-bottom: auto;
  margin-left: auto; }

/*********************************************
    Responsive tables
    This is an example tested with the
    default setup. You might want to modify
    or disable this entirely.
**********************************************/
.ce-table[class*="table-header-position"] {
  border: none; }
  .ce-table[class*="table-header-position"] tr, .ce-table[class*="table-header-position"] td {
    display: block;
    padding: initial;
    margin: initial; }
  .ce-table[class*="table-header-position"] tr,
  .ce-table[class*="table-header-position"] td,
  .ce-table[class*="table-header-position"] tr:before,
  .ce-table[class*="table-header-position"] tr th,
  .ce-table[class*="table-header-position"] thead {
    display: none; }
  .ce-table[class*="table-header-position"] td:before {
    display: inline; }
  .ce-table[class*="table-header-position"].table-header-position-1 td:before {
    content: attr(data-columnheader) " (" attr(data-rowheader) "): "; }
  .ce-table[class*="table-header-position"].table-header-position-1 td[data-columnheader=""],
  .ce-table[class*="table-header-position"].table-header-position-1 td[data-columnheader=""]:before {
    display: none; }
  .ce-table[class*="table-header-position"].table-header-position-2 tr:first-child {
    display: none; }
  .ce-table[class*="table-header-position"].table-header-position-2 td:before {
    content: attr(data-rowheader) " (" attr(data-columnheader) "): "; }

section > div.layout-1 p {
  text-align: left; }

/* latin */
@font-face {
  font-family: 'Montserrat';
  font-style: normal;
  font-weight: 400;
  src: local("Montserrat-Regular"), url(http://fonts.gstatic.com/s/montserrat/v6/zhcz-_WihjSQC0oHJ9TCYPk_vArhqVIZ0nv9q090hN8.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000; }

/* latin */
@font-face {
  font-family: 'Montserrat';
  font-style: normal;
  font-weight: 700;
  src: local("Montserrat-Bold"), url(http://fonts.gstatic.com/s/montserrat/v6/IQHow_FEYlDC4Gzy_m8fcoWiMMZ7xLd792ULpGE4W_Y.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000; }

/* latin */
@font-face {
  font-family: 'Josefin Slab';
  font-style: normal;
  font-weight: 100;
  src: local("Josefin Slab Thin"), local("JosefinSlab-Thin"), url(http://fonts.gstatic.com/s/josefinslab/v6/etsUjZYO8lTLU85lDhZwUldBB84BqlWy1BjOnCrU9PY.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000; }

/* latin */
@font-face {
  font-family: 'Josefin Slab';
  font-style: normal;
  font-weight: 300;
  src: local("Josefin Slab Light"), local("JosefinSlab-Light"), url(http://fonts.gstatic.com/s/josefinslab/v6/NbE6ykYuM2IyEwxQxOIi2E4GofcKVZz6wtzX_QUIqsI.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000; }

/* latin */
@font-face {
  font-family: 'Josefin Slab';
  font-style: normal;
  font-weight: 400;
  src: local("Josefin Slab"), local("JosefinSlab"), url(http://fonts.gstatic.com/s/josefinslab/v6/46aYWdgz-1oFX11flmyEfegdm0LZdjqr5-oayXSOefg.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000; }

/* latin */
@font-face {
  font-family: 'Josefin Slab';
  font-style: normal;
  font-weight: 600;
  src: local("Josefin Slab SemiBold"), local("JosefinSlab-SemiBold"), url(http://fonts.gstatic.com/s/josefinslab/v6/NbE6ykYuM2IyEwxQxOIi2PBf3Xtc57ojmY2ox2Xv8Go.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000; }

/* latin */
@font-face {
  font-family: 'Josefin Slab';
  font-style: normal;
  font-weight: 700;
  src: local("Josefin Slab Bold"), local("JosefinSlab-Bold"), url(http://fonts.gstatic.com/s/josefinslab/v6/NbE6ykYuM2IyEwxQxOIi2HNuWYKPzoeKl5tYj8yhly0.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000; }

@font-face {
  font-family: 'Josefin Sans';
  font-style: normal;
  font-weight: 100;
  src: local("Josefin Sans Thin"), local("JosefinSans-Thin"), url(http://fonts.gstatic.com/s/josefinsans/v9/q9w3H4aeBxj0hZ8Osfi3d1dBB84BqlWy1BjOnCrU9PY.woff2) format("woff2"); }

@font-face {
  font-family: 'Josefin Sans';
  font-style: normal;
  font-weight: 300;
  src: local("Josefin Sans Light"), local("JosefinSans-Light"), url(http://fonts.gstatic.com/s/josefinsans/v9/C6HYlRF50SGJq1XyXj04z04GofcKVZz6wtzX_QUIqsI.woff2) format("woff2"); }

@font-face {
  font-family: 'Josefin Sans';
  font-style: normal;
  font-weight: 400;
  src: local("Josefin Sans"), local("JosefinSans"), url(http://fonts.gstatic.com/s/josefinsans/v9/xgzbb53t8j-Mo-vYa23n5ugdm0LZdjqr5-oayXSOefg.woff2) format("woff2"); }

@font-face {
  font-family: 'Josefin Sans';
  font-style: normal;
  font-weight: 600;
  src: local("Josefin Sans SemiBold"), local("JosefinSans-SemiBold"), url(http://fonts.gstatic.com/s/josefinsans/v9/C6HYlRF50SGJq1XyXj04z_Bf3Xtc57ojmY2ox2Xv8Go.woff2) format("woff2"); }

@font-face {
  font-family: 'Josefin Sans';
  font-style: normal;
  font-weight: 700;
  src: local("Josefin Sans Bold"), local("JosefinSans-Bold"), url(http://fonts.gstatic.com/s/josefinsans/v9/C6HYlRF50SGJq1XyXj04z3NuWYKPzoeKl5tYj8yhly0.woff2) format("woff2"); }

#cssmenu,
#cssmenu ul,
#cssmenu ul li,
#cssmenu ul li a,
#cssmenu #menu-button {
  margin: 0;
  padding: 0;
  border: 0;
  list-style: none;
  line-height: 1;
  display: block;
  position: relative;
  box-sizing: border-box; }

#cssmenu:after,
#cssmenu > ul:after {
  content: ".";
  display: block;
  clear: both;
  visibility: hidden;
  line-height: 0;
  height: 0; }

#cssmenu #menu-button {
  display: none; }

#cssmenu {
  font-family: Montserrat, sans-serif;
  background: none; }

@media only screen and (max-width: 768px) {
  #cssmenu {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    background: #333;
    z-index: 3; } }

#cssmenu > ul {
  text-align: center;
  margin-top: -10px; }

#cssmenu > ul > li {
  float: none;
  display: inline-block;
  margin-top: 0; }

@media only screen and (max-width: 768px) {
  #cssmenu > ul > li {
    margin-top: 0; }
  #cssmenu > ul > li:first-child {
    margin-top: 50px; }
  #cssmenu > ul > li.has-sub > a {
    padding-right: 10px !important; } }

#cssmenu.align-center > ul {
  font-size: 0;
  text-align: center; }

#cssmenu.align-center > ul > li {
  display: inline-block;
  float: none;
  position: relative; }

#cssmenu.align-center ul ul {
  text-align: left; }

#cssmenu.align-right > ul > li {
  float: right; }

#cssmenu > ul > li > a:not(#logo) {
  padding: 17px 17px 10px 17px;
  font-size: 12px;
  letter-spacing: 1px;
  text-decoration: none;
  color: #dddddd;
  font-weight: 700;
  text-transform: uppercase; }
  #cssmenu > ul > li > a:not(#logo).path, #cssmenu > ul > li > a:not(#logo):hover {
    color: #ad8c59; }

@media only screen and (max-width: 920px) {
  #cssmenu > ul > li > a {
    padding-right: 10px;
    padding-left: 10px; } }

@media only screen and (max-width: 768px) {
  #cssmenu > ul > li > a {
    padding-top: 13px;
    padding-bottom: 12px; } }

/*
#cssmenu > ul > li:hover > a {
  color: rgb(173, 140, 89);
}
#cssmenu ul ul li a:hover {
  color: $gold;
}
*/
#cssmenu > ul > li.has-sub > a {
  padding-right: 30px; }

#cssmenu > ul > li.has-sub > a:after {
  position: absolute;
  top: 22px;
  right: 11px;
  width: 8px;
  height: 2px;
  display: block;
  background: #dddddd;
  content: ''; }

#cssmenu > ul > li.has-sub > a:before {
  position: absolute;
  top: 19px;
  right: 14px;
  display: block;
  width: 2px;
  height: 8px;
  background: #dddddd;
  content: '';
  -webkit-transition: all .25s ease;
  -moz-transition: all .25s ease;
  -ms-transition: all .25s ease;
  -o-transition: all .25s ease;
  transition: all .25s ease; }

#cssmenu > ul > li.has-sub:hover > a:before {
  top: 23px;
  height: 0; }

#cssmenu ul ul {
  position: absolute;
  left: -9999px; }

#cssmenu.align-right ul ul {
  text-align: right; }

#cssmenu ul ul li {
  height: 0;
  -webkit-transition: all .25s ease;
  -moz-transition: all .25s ease;
  -ms-transition: all .25s ease;
  -o-transition: all .25s ease;
  transition: all .25s ease; }

#cssmenu li:hover > ul {
  left: 50%;
  margin-left: -50px; }

#cssmenu.align-right li:hover > ul {
  left: 0;
  right: 0; }

#cssmenu li:hover > ul > li {
  height: 35px; }

#cssmenu ul ul ul {
  margin-left: 100%;
  top: 0; }

#cssmenu.align-right ul ul ul {
  margin-left: 0;
  margin-right: 100%; }

#cssmenu ul ul li a {
  border-bottom: 1px solid rgba(150, 150, 150, 0.15);
  padding: 0px 15px;
  width: 100px;
  font-size: 12px;
  text-decoration: none;
  color: #dddddd;
  font-weight: 400; }

#cssmenu ul ul li:last-child > a,
#cssmenu ul ul li.last-item > a {
  border-bottom: 0; }

#cssmenu ul ul li.has-sub > a:after {
  position: absolute;
  top: 16px;
  right: 11px;
  width: 8px;
  height: 2px;
  display: block;
  background: #dddddd;
  content: ''; }

#cssmenu.align-right ul ul li.has-sub > a:after {
  right: auto;
  left: 11px; }

#cssmenu ul ul li.has-sub > a:before {
  position: absolute;
  top: 13px;
  right: 14px;
  display: block;
  width: 2px;
  height: 8px;
  background: #dddddd;
  content: '';
  -webkit-transition: all .25s ease;
  -moz-transition: all .25s ease;
  -ms-transition: all .25s ease;
  -o-transition: all .25s ease;
  transition: all .25s ease; }

#cssmenu.align-right ul ul li.has-sub > a:before {
  right: auto;
  left: 14px; }

#cssmenu ul ul > li.has-sub:hover > a:before {
  top: 17px;
  height: 0; }

#logo-item {
  display: none; }

@media all and (max-width: 768px), only screen and (-webkit-min-device-pixel-ratio: 2) and (max-width: 768px), only screen and (min--moz-device-pixel-ratio: 2) and (max-width: 768px), only screen and (-o-min-device-pixel-ratio: 2 / 1) and (max-width: 768px), only screen and (min-device-pixel-ratio: 2) and (max-width: 768px), only screen and (min-resolution: 192dpi) and (max-width: 768px), only screen and (min-resolution: 2dppx) and (max-width: 768px) {
  #cssmenu {
    width: 100%; }
  #logo-item {
    display: none; }
  #cssmenu ul {
    width: 100%;
    display: none; }
  #cssmenu.align-center > ul {
    text-align: left; }
  #cssmenu ul li {
    width: 100%;
    border-top: 1px solid rgba(120, 120, 120, 0.2); }
  #cssmenu ul ul li,
  #cssmenu li:hover > ul > li {
    height: auto; }
  #cssmenu ul li a,
  #cssmenu ul ul li a {
    width: 100%;
    border-bottom: 0; }
  #cssmenu > ul > li {
    float: none; }
  #cssmenu ul ul li a {
    padding-left: 25px; }
  #cssmenu ul ul ul li a {
    padding-left: 35px; }
  #cssmenu ul ul li a {
    color: #dddddd;
    background: none; }
  #cssmenu ul ul li:hover > a,
  #cssmenu ul ul li.active > a {
    color: red; }
  #cssmenu ul ul,
  #cssmenu ul ul ul,
  #cssmenu.align-right ul ul {
    position: relative;
    left: 0;
    width: 100%;
    margin: 0;
    text-align: left; }
  #cssmenu > ul > li.has-sub > a:after,
  #cssmenu > ul > li.has-sub > a:before,
  #cssmenu ul ul > li.has-sub > a:after,
  #cssmenu ul ul > li.has-sub > a:before {
    display: none; }
  #cssmenu #menu-button {
    display: block;
    padding: 17px;
    color: #dddddd;
    cursor: pointer;
    font-size: 12px;
    text-transform: uppercase;
    font-weight: 700;
    text-indent: -9999px;
    overflow: hidden;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 100; }
  #cssmenu #menu-button:after {
    position: absolute;
    top: 22px;
    left: 17px;
    display: block;
    height: 4px;
    width: 20px;
    border-top: 2px solid #dddddd;
    border-bottom: 2px solid #dddddd;
    content: ''; }
  #cssmenu #menu-button:before {
    position: absolute;
    top: 16px;
    left: 17px;
    display: block;
    height: 2px;
    width: 20px;
    background: #dddddd;
    content: ''; }
  #cssmenu #menu-button.menu-opened:after {
    top: 23px;
    border: 0;
    height: 2px;
    width: 15px;
    background: #ad8c59;
    -webkit-transform: rotate(45deg);
    -moz-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    -o-transform: rotate(45deg);
    transform: rotate(45deg); }
  #cssmenu #menu-button.menu-opened:before {
    top: 23px;
    background: #ad8c59;
    width: 15px;
    -webkit-transform: rotate(-45deg);
    -moz-transform: rotate(-45deg);
    -ms-transform: rotate(-45deg);
    -o-transform: rotate(-45deg);
    transform: rotate(-45deg); }
  #cssmenu .submenu-button {
    position: absolute;
    z-index: 99;
    right: 0;
    top: 0;
    display: block;
    border-left: 1px solid rgba(120, 120, 120, 0.2);
    height: 37px;
    width: 46px;
    cursor: pointer; }
  #cssmenu .submenu-button.submenu-opened {
    /*background: #262626;*/ }
  #cssmenu ul ul .submenu-button {
    height: 34px;
    width: 34px; }
  #cssmenu .submenu-button:after {
    position: absolute;
    top: 22px;
    right: 19px;
    width: 8px;
    height: 2px;
    display: block;
    background: #dddddd;
    content: ''; }
  #cssmenu ul ul .submenu-button:after {
    top: 15px;
    right: 13px; }
  #cssmenu .submenu-button.submenu-opened:after {
    background: #ad8c59; }
  #cssmenu .submenu-button:before {
    position: absolute;
    top: 19px;
    right: 22px;
    display: block;
    width: 2px;
    height: 8px;
    background: #dddddd;
    content: ''; }
  #cssmenu ul ul .submenu-button:before {
    top: 12px;
    right: 16px; }
  #cssmenu .submenu-button.submenu-opened:before {
    display: none; } }

@media only screen and (max-width: 768px) {
  #cssmenu .submenu-button:before {
    top: 15px; }
  #cssmenu .submenu-button:after {
    top: 18px; }
  #cssmenu ul li a {
    font-size: 14px;
    font-weight: normal; }
  #cssmenu ul li ul li a {
    text-align: center;
    padding: 10px 0;
    font-size: 12px; }
  #cssmenu ul li ul {
    background: #222; }
  #cssmenu ul li:hover ul {
    margin-left: 0;
    left: 0; } }

.news .news-list-view .article {
  width: 50%;
  float: left;
  text-align: left;
  padding: 20px; }
  .news .news-list-view .article h2 a {
    color: #fefefe; }
    .news .news-list-view .article h2 a:hover {
      color: #ad8c59; }
  .news .news-list-view .article p {
    padding-top: 10px;
    text-align: left;
    font-family: "Josefin Sans"; }

.news-img-wrap {
  display: none; }

.newsall {
  margin: 0 auto;
  width: 780px; }

.news1, .news2 {
  width: 350px;
  float: left;
  text-align: left;
  font-size: 120%;
  font-weight: 100;
  padding: 20px; }

.news2 {
  padding-bottom: 120px; }

.news1artikel {
  padding-top: 10px;
  text-align: left;
  font-family: "Josefin Sans"; }

.date {
  color: #ad8c59;
  letter-spacing: 0.1em; }

@media only screen and (max-width: 840px) {
  .newsall {
    /*float: left;
    width: 90%;
    margin-left: 5%;
    margin-right: 5%;*/
    width: 350px;
    max-width: 90%; }
  .news1, .news2 {
    width: 100%;
    padding-right: 0;
    padding-left: 0;
    text-align: center; }
  .news1artikel,
  .date {
    text-align: center; } }

/*--------------------
Allgemeine Einstellungen
---------------------*/
html {
  min-height: 100%; }

header {
  width: 30%;
  text-align: center; }

body {
  background-image: url("../img/manuel3.jpg");
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
  color: white;
  min-height: 100%; }

@media only screen and (max-width: 768px) {
  body {
    background-image: url("../img/manuel2.jpg"); } }

h1 {
  line-height: 1.6;
  font-size: 2.1rem;
  font-weight: 600;
  letter-spacing: 0.1rem;
  color: white;
  text-align: center;
  text-transform: uppercase;
  padding-bottom: 20px; }

h2 {
  font-size: 1.5rem;
  font-weight: normal;
  padding-top: 20px;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  line-height: 140%; }

h3 {
  font-weight: normal;
  line-height: 1.2rem;
  font-size: 250%;
  font-weight: 400;
  letter-spacing: .1em;
  color: white;
  text-align: center;
  /*margin-top: 20%;*/
  text-transform: uppercase;
  padding-bottom: 20px; }

section {
  text-align: center; }

p {
  text-align: center; }

a {
  font-weight: 500; }

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  #wrapper p {
    font-weight: 300;
    font-size: 130%; } }

img {
  width: 100%;
  height: auto; }

.main {
  width: 100%;
  margin: 130px 0; }

.main.galerie {
  margin-top: 100px; }

/*@media only screen and (max-width : 768px)  {
  .main {
    margin-top: 20px;
  }
}*/
/*------------------------
ID's ###
-------------------------*/
#wrapper {
  /*float: left;*/
  width: 100%;
  position: relative;
  min-height: 100vh; }

.player {
  margin-top: 100px; }

.desk {
  margin: auto;
  width: 960px;
  max-width: 94%; }

/*
#moblogo
#cssmenu #moblogo:hover,
#cssmenu #moblogo:focus
*/
#logo, #logo-iconesque {
  width: 200px;
  padding: 0;
  margin-top: 0;
  position: relative;
  top: 31px;
  height: 80px;
  display: block;
  background: url(../img/logo_final.svg) no-repeat 0 0;
  -webkit-transition: background-image 0.5s ease-out;
  -moz-transition: background-image 0.5s ease-out;
  -o-transition: background-image 0.5s ease-out;
  transition: background-image 0.5s ease-out; }
  #logo img, #logo-iconesque img {
    display: none; }

#logo-iconesque:hover,
#logo-iconesque:focus,
#logo:hover,
#logo:focus {
  background-image: url(../img/logo_final_gold.svg); }

#sprache {
  position: absolute;
  right: 10px;
  top: 16px;
  z-index: 2;
  text-decoration: none; }

@media only screen and (max-width: 825px) {
  #cssmenu #logo {
    width: 200px; } }

@media only screen and (max-width: 768px) {
  #cssmenu #logo {
    display: none; }
  #sprache {
    /*right: 17px;*/
    z-index: 4; } }

#sprache a {
  margin: 0 5px;
  color: #fff;
  font-size: 12px;
  font-weight: bold;
  text-decoration: none; }
  #sprache a.inactive {
    pointer-events: none;
    cursor: default;
    opacity: 0.6; }

/*
#sprache a:hover {
  color: rgb(173, 140, 89);
}
*/
#mobile-logo {
  margin: 40px auto 0;
  display: block;
  width: 200px; }

@media only screen and (min-width: 769px) {
  #mobile-logo {
    display: none; } }

#listen {
  vertical-align: middle;
  position: relative;
  color: white;
  line-height: 140%;
  font-size: 90%;
  outline-color: white;
  outline-width: 2px;
  outline-style: solid;
  width: 40%;
  margin: 0 auto;
  margin-bottom: 40px;
  -webkit-transition: all 0.5s ease-out;
  -moz-transition: all  0.5s ease-out;
  -o-transition: all  0.5s ease-out;
  transition: all  0.5s ease-out; }

#listen:hover {
  outline-color: transparent; }

#listen a {
  padding: 20px;
  display: block;
  color: #ad8c59;
  letter-spacing: .4em;
  text-decoration: none; }

@media only screen and (max-width: 500px) {
  #listen {
    width: 75%; }
  #listen a {
    font-size: 12px;
    padding: 10px;
    letter-spacing: .2em; } }

#listen a:hover {
  color: black;
  background-color: #ad8c59;
  -webkit-transition: background-color 0.5s ease-out;
  -moz-transition: background-color  0.5s ease-out;
  -o-transition: background-color  0.5s ease-out;
  transition: background-color  0.5s ease-out; }

.button,
#event a {
  padding: 0.4rem 0.8rem;
  display: block;
  text-align: center;
  letter-spacing: .4em;
  color: #ad8c59;
  -webkit-transition: all 0.5s ease-out;
  -moz-transition: all  0.5s ease-out;
  -o-transition: all  0.5s ease-out;
  transition: all  0.5s ease-out;
  vertical-align: middle;
  float: left;
  text-transform: uppercase;
  outline-color: white;
  outline-width: 2px;
  outline-style: solid;
  margin: 0 auto;
  margin-bottom: 40px;
  margin-top: 20px;
  font-family: "Josefin+Sans", sans-serif, "Josefin Slab", serif;
  font-weight: 100;
  font-size: 0.9rem; }

.button:hover,
#event a:hover {
  color: black;
  background-color: #ad8c59;
  -webkit-transition: background-color 0.5s ease-out;
  -moz-transition: background-color  0.5s ease-out;
  -o-transition: background-color  0.5s ease-out;
  transition: background-color  0.5s ease-out;
  outline-color: transparent; }

@media only screen and (max-width: 840px) {
  #event {
    float: none;
    margin: 20px auto 0;
    text-align: center;
    width: 75%; }
  #event a {
    font-size: 12px;
    padding: 10px;
    letter-spacing: .2em;
    display: block;
    text-align: center;
    width: auto; } }

/*   FORMULAR   */
.formular {
  width: 40%;
  margin: 0 auto; }

@media only screen and (max-width: 768px) {
  .formular {
    width: 80%; } }

.main fieldset {
  border: none; }

.main label {
  width: 100%;
  float: left;
  display: block;
  margin-bottom: 10px;
  display: block;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  font-weight: 300;
  padding: 6px 0 5px;
  text-align: left;
  margin-top: 15px;
  margin-bottom: 5px; }

.main textarea,
.main input {
  float: left;
  width: 100%;
  display: block;
  margin-bottom: 10px;
  display: block;
  font-size: 14px;
  color: #000;
  line-height: 1.6;
  padding: 0 5px;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box;
  font-family: "Josefin+Sans", sans-serif, "Josefin Slab", serif; }

.main textarea {
  min-height: 120px; }

.main .formsend {
  float: left;
  width: 100%; }

.main input.submit {
  appearance: button;
  -moz-appearance: button;
  -webkit-appearance: button;
  width: 200px;
  color: white;
  line-height: 140%;
  outline-color: white;
  outline-width: 2px;
  outline-style: solid;
  background: none;
  border: none;
  border-radius: 0;
  padding: 10px;
  display: block;
  color: #ad8c59;
  letter-spacing: .4em;
  text-decoration: none;
  text-transform: uppercase;
  margin: 25px auto 30px;
  float: none; }

.main input.submit:hover {
  background: #ad8c59;
  color: #000;
  cursor: pointer;
  -webkit-transition: all 0.5s ease-out;
  -moz-transition: all  0.5s ease-out;
  -o-transition: all  0.5s ease-out;
  transition: all  0.5s ease-out;
  outline-color: transparent; }

/*#youtube	{ 	float: left;
				width: 5%;
				padding-right: 2%;
}*/
/*-------
nav a:link {	color: white;
				text-decoration: none;
}

nav a:visited	{	color: red;
					text-decoration: none;
}

nav a:hover, a:focus	{	color: #A4A4A4;
}

nav a:active	{	color:red;
}

li a:active, li a:hover{
	color: red;
}
---------*/
footer {
  float: left;
  width: 100%;
  margin-bottom: 30px;
  margin-top: 30px; }

footer.bottom {
  position: absolute;
  bottom: 20px;
  left: 0;
  width: 100%;
  height: 40px;
  margin: 0; }

@media only screen and (max-width: 767px) {
  footer {
    position: relative;
    float: left; } }

.social {
  margin: 0 auto;
  display: block;
  width: 150px; }

.socialicon {
  float: left;
  display: block;
  margin: 0 10px; }

.socialicon a {
  display: block;
  -webkit-transition: background-image 0.5s ease-out;
  -moz-transition: background-image 0.5s ease-out;
  -o-transition: background-image 0.5s ease-out;
  transition: background-image 0.5s ease-out; }

.songsall {
  margin: 0 auto;
  width: 780px; }

.song {
  width: 350px;
  text-align: left;
  font-size: 120%;
  font-weight: 100;
  padding: 20px; }

.song.left {
  float: left; }

.song.right {
  float: right; }

.songtext {
  padding-top: 10px;
  text-align: left;
  font-family: "Josefin Sans";
  line-height: 140%;
  font-weight: 130%;
  font-size: 90%; }

.umbruch {
  padding-bottom: 5%; }

@media only screen and (max-width: 840px) {
  .songsall {
    /*float: left;
    width: 90%;
    margin-left: 5%;
    margin-right: 5%;*/
    width: 350px;
    max-width: 90%; }
  .song1, .song2, .song3, .song4 {
    width: 100%;
    padding-right: 0;
    padding-left: 0;
    text-align: center; }
  .songtext {
    text-align: center; } }

/*--
@media only screen and (max-width : 768px)  {
  .songsall, .news1, .news2{
    clear: both;
  } --*/
#youtube a {
  width: 30px;
  height: 24px;
  background: url(../img/youtube_white.png) no-repeat 0 0;
  background-size: 30px auto; }

#facebook a {
  width: 30px;
  height: 24px;
  background: url(../img/facebook_white.png) no-repeat 0 0;
  background-size: 30px auto; }

#soundcloud a {
  width: 30px;
  height: 24px;
  background: url(../img/soundcloud_white.png) no-repeat 0 0;
  background-size: 30px auto; }

#youtube a:hover {
  background-image: url(../img/youtube_gold.png); }

#facebook a:hover {
  background-image: url(../img/facebook_gold.png); }

#soundcloud a:hover {
  background-image: url(../img/soundcloud_gold.png); }

/*# sourceMappingURL=data:application/json;base64, */