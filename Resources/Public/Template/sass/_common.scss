/*********************************************
    This file contains any stylings that
    aren't specifically meant to design the
    page but rather to set some commonly used
    formatting such as no bullet lists in
    menus or often used elements such
    as a hamburger icon.
**********************************************/


/*********************************************
    Settings
**********************************************/

// Image / textpic settings
$pictureSpacing:$column-gutter / 2;         // Spacing between images
$pictureVsTextSpacing:$column-gutter;       // Spacing between images & text (for textpic elements)
$textpic-intext-defaultMaxWidth:70%;        // Picture container max default width (for textpic elements), if no width defined by editor.
$enableImageColumnsMediaQuery:$medium-up;   // Screen size allowing multiple columns.

// Hamburger icon settings
$hamburger-icon-thickness:2px;
$hamburger-icon-gap:$hamburger-icon-thickness * 4;
$hamburger-icon-width:$hamburger-icon-thickness * 10;
$hamburger-icon-color: $primary-color;


/*********************************************
    Content elements
**********************************************/
// Allow iFrame widths (p.e. embedded videos)
// to span 100% max (& remove frame)
iframe {
    max-width:100%;
    border:none;
}

/*********************************************
    Menus
**********************************************/
nav ul { list-style-type:none; }
nav a { text-decoration:none; }

// Hamburger icon
.hamburger-icon {
    cursor:pointer;
    display:block;
    margin:$hamburger-icon-gap * 2 auto 0 auto;

    width:$hamburger-icon-width;
    border-top:$hamburger-icon-thickness solid $hamburger-icon-color;
    border-bottom:$hamburger-icon-thickness solid $hamburger-icon-color;
    padding:$hamburger-icon-gap / 2 0;

    &:before {
        content:'';
        display:block;
        width:100%;
        border-top:$hamburger-icon-thickness solid $hamburger-icon-color;
    }
}

/*********************************************
    Reset box sizing on certain elements
**********************************************/
.fancybox-wrap,
.fancybox-wrap *,
iframe * {
    box-sizing:initial;
}


/*********************************************
    Skiplinks
**********************************************/
#skiplinks {
    position:absolute;
    z-index:1000;
    top:-20000px;
    width:100%;
    margin:auto;
    padding:0;
    list-style-type:none;

    a {
        position:absolute;
        display:block;
        width:100%;
        text-align:center;
        color:#fff;

        span {
            display:inline-block;
            padding:7px 10px;
            background:$primary-color;
        }
    }
    a:focus,
    a:active,
    a:hover {
        top:20000px;
        outline:0 none;
    }
}


/*********************************************
    Remove list style from lists
    of fields (form extension)
**********************************************/
form > ol,
fieldset > ol,
form ol li ol {
    list-style-type:none;
    margin-top:auto;
    margin-right:auto;
    margin-bottom:auto;
    margin-left:auto;
}


/*********************************************
    Responsive tables
    This is an example tested with the
    default setup. You might want to modify
    or disable this entirely.
**********************************************/
@media #{$small-only} {

    .ce-table[class*="table-header-position"] {
        border:none;

        tr, td {
            display:block;
            padding:initial;
            margin:initial;
        }

        tr,
        td,
        tr:before,
        td:before { line-height:$paragraph-line-height; }

        // Hide regular headers
        tr th,
        thead { display:none; }

        // Add correct font weight & basic styling to future headers
        td:before {
            display:inline;
            font-weight:$table-head-font-weight;
        }

        tr { margin-bottom:$paragraph-margin-bottom;}

        // Table header left (first column)
        &.table-header-position-1 {
            td:before { content:attr(data-columnheader) ' (' attr(data-rowheader) '): '; }
            // Hide created header, if it is empty
            td[data-columnheader=""],
            td[data-columnheader=""]:before { display:none; }
        }

        // Table header top (first row)
        &.table-header-position-2 {
            // Hide first row (header row)
            tr:first-child { display:none; }
            td:before { content:attr(data-rowheader) ' (' attr(data-columnheader) '): '; }
        }
    }
}


/*********************************************
    Image / textmedia styling
**********************************************/
// Some basic ce styles copied from fluid_styled_content
// Styles/setup.txt
.ce-left .ce-gallery,
.ce-column { float: left; }
.ce-right .ce-gallery { float: right; }
.ce-center .ce-outer { position: relative; float: right; right: 50%; }
.ce-center .ce-inner { position: relative; float: right; right: -50%; }
.ce-gallery figure { display: table; margin: 0; }
.ce-gallery figcaption { display: table-caption; caption-side: bottom; }
.ce-above .ce-bodytext { clear: both; }


// Image scaling FF compatibility
.ce-textpic .ce-media,
.ce-textpic figure { width:100%; max-width:100%; }

/*********************************************
    Video
**********************************************/
.ce-textpic .video {
    position: relative;
    padding-bottom: 56.25%; /* 16:9 */
    padding-top: 25px;
    height: 0;

    .preview,
    iframe {
        display:block;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    .preview {
        background-position:center;
        background-size:cover;
        &:after,
        &:before{
            display:block;
            position:absolute;
            left:50%;
            top:50%;
            content:' ';
            @include opacity(0.7);
            @include transition(all 0.2s);
        }
        &:hover:before,
        &:hover:after { @include opacity(1); }

        &:before {
            @include transform(translateX(-50%) translateY(-50%));
            border:4px solid $white;
            width:70px;
            height:70px;
            @include border-radius(40px);
        }
        &:after {
            width: 0;
            height: 0;
            border-top: 20px solid transparent;
            border-bottom: 20px solid transparent;
            border-left: 30px solid $white;
            @include transform(translateX(-35%) translateY(-50%));
        }
    }
}


/*********************************************
    Images
**********************************************/
// Applying 'our' styles to textmedia elements
// to fit well into foundation.
.ce-textpic {

    &.ce-center .ce-gallery { margin-left:auto; margin-right:auto; }

    .ce-gallery {
        max-width:100%;
        margin-bottom:$pictureVsTextSpacing;
        float:none;
        &:after {
            display:table;
            content:' ';
            clear:both;
        }
        .ce-column {
            margin-right:0;
            overflow:initial;
            float:none;
        }
        .ce-row,
        .ce-column {
            figure,
            .ce-media {
                margin-bottom:$pictureSpacing;
            }
        }
    }
}

// Add margins (in the shape of paddings) to the images
@media #{$enableImageColumnsMediaQuery} {
    .ce-textpic .ce-gallery {

        // Main gallery positioning
        // Notice that the negative margins are used in order
        // to get a proper block grid.
        margin:0 (-$pictureSpacing / 2) ($pictureVsTextSpacing - $pictureSpacing) (-$pictureSpacing / 2);
        &[data-ce-columns="1"] { margin-left:0; }

        // Create block grid
        $expectedMaxNumberOfColumns:10;
        $numberOfColumns:2;
        @while $numberOfColumns <= $expectedMaxNumberOfColumns {

            &[data-ce-columns="#{$numberOfColumns}"] .ce-column {
                width:100% / $numberOfColumns;
                display:block;
                float:left;
                height:auto;
                clear:none;
                margin:0;
                padding:0 $pictureSpacing/2;

                &:nth-of-type(#{$numberOfColumns}n+1) {
                    clear:both;
                }
            }

            $numberOfColumns:$numberOfColumns+1;
        }
    }
}

/*********************************************
    Image captions
**********************************************/
.ce-textpic figcaption { padding-top:1%; }


/*********************************************
    Picture / text display for large views
**********************************************/
@media #{$enableImageColumnsMediaQuery} {

    .ce-textpic {

        // Clear content element after, if there are floated elements
        &.ce-intext {

            &.ce-left .ce-gallery {
                float:left;
                margin-right:$pictureVsTextSpacing;
                margin-bottom:$pictureVsTextSpacing - $pictureSpacing;
            }
            &.ce-right .ce-gallery {
                float:right;
                margin-bottom:$pictureVsTextSpacing - $pictureSpacing;
                margin-left:$pictureVsTextSpacing;
            }

            &:after {
                display:table;
                content:' ';
                clear:both;
            }
            // Set default max width of image container.
            // This might get overridden via T3 inline-CSS on the element itself.
            .ce-gallery {
                max-width:$textpic-intext-defaultMaxWidth;
            }
        }

        // Pictures aligned right
        &.ce-right.ce-nowrap {
            // Float image container & compensate negative margins introduced by block grid
            // in order to get the correct distance to the text.
            .ce-gallery {
                margin-right:-($pictureSpacing / 2);
                margin-left:$pictureVsTextSpacing - ($pictureSpacing / 2);
                float:right;

                // Do not compensate for picture containers that only have 1 column as
                // there haven't been any negative margins set (no horizontal spacing
                // needed).
                &.has-1-columns {
                    margin-right:0;
                    margin-left:$pictureVsTextSpacing;
                }
            }
        }

        // Pictures aligned left
        // (see comments above).
        &.ce-left.ce-nowrap {
            .ce-gallery {
                margin-left:-$pictureSpacing / 2;
                margin-right:$pictureVsTextSpacing - ($pictureSpacing / 2);
                float:left;

                &.has-1-columns {
                    margin-left:0;
                    margin-right:$pictureVsTextSpacing;
                }
            }
        }
    }
}